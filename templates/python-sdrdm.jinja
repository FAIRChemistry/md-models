{% import "python-sdrdm-macros.jinja" as utils %}

## This is a generated file. Do not modify it manually!

from __future__ import annotations
from typing import Dict, List, Optional
from uuid import uuid4

from lxml.etree import _Element
from pydantic import PrivateAttr, model_validator
from pydantic_xml import attr, element

import sdRDM
from sdRDM.base.listplus import ListPlus
from sdRDM.tools.utils import elem2dict

{% for object in objects %}
class {{object.name}}(
    sdRDM.DataModel,
    search_mode="unordered",
):
    {%- for attr in object.attributes -%}
        {{ utils.create_attribute(attr) }}
    {%- endfor %}
    _repo: str = PrivateAttr(default="{{ repo }}")

    {% for attr in object.attributes %}
    {%- for dtype in attr.dtypes %}
    {%- if dtype in object_names and attr.multiple is true %}
    def add_to_{{ attr.name }}(
        {{ utils.signature(objects, dtype) }}
    ):
        params = {
            {{ utils.params(objects, dtype) }}
        }

        self.{{ attr.name }}.append(
            {{ dtype }}(**params)
        )

        return self.{{ attr.name }}[-1]

    {%- endif %}
    {%- endfor %}
    {%- endfor %}
{% endfor %}
{%- for enum in enums %}
class {{ enum.name }}(Enum):
    {%- for key, value in enum.mappings | dictsort %}
    {{ key }} = "{{ value }}"
    {%- endfor %}
{% endfor %}
