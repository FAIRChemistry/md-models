{#
    This macro checks whether there are any attributes that are elements
#}
{%- macro has_elements(attributes) -%}
    {%- for attribute in attributes -%}
        {%- if attribute.xml.is_attr is false -%}
            Has element
        {%- endif -%}
    {%- endfor -%}
{%- endmacro -%}

{#
    This macro determines whether an attribute/element is required
#}
{%- macro is_required(attribute) -%}
    {%- if attribute.required is true %} use="required"{%- endif -%}
{%- endmacro -%}

{#
    This macro creates a default value for an element/attribute.
#}
{%- macro get_default(attr) -%}
    {%- if 'default' in attr -%} default="{{ attr.default }}"{%- endif -%}
{%- endmacro -%}

{#
    This macro determines whether an attribute/element is required
#}
{%- macro is_multiple(attribute) -%}
    {%- if attribute.multiple is true %} maxOccurs="unbounded"{%- endif -%}
    {%- if attribute.required is true and attribute.multiple is true %} minOccurs="1"{%- endif -%}
{%- endmacro -%}

{#
    This macro creates an entry in the XML schema for a given attribute.
#}
{%- macro create_attribute(attribute) -%}
        {%- if attribute.docstring | length > 0 %}
        <xs:attribute name="{{ attribute.name }}" type="xs:{{ attribute.dtypes[0] }}"
            {%- if is_required(attribute) %} {{ is_required(attribute) }}{%- endif -%}
            {%- if get_default(attribute) %} {{ get_default(attribute) }}{%- endif -%}
            >
            <xs:annotation>
                <xs:documentation>
                    {{ attribute.docstring }}
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        {%- else -%}
        <xs:attribute name="{{ attribute.name }}" type="xs:{{ attribute.dtypes[0] }}"
        {%- if is_required(attribute) %} {{ is_required(attribute) }}{%- endif -%}
        {%- if get_default(attribute) %} {{ get_default(attribute) }}{%- endif -%}
        />
        {%- endif -%}
{%- endmacro %}

{#
    This macro creates an entry in the XML schema for a given element.
#}
{%- macro create_element(attribute) -%}
{%- if attribute.dtypes[0] in object_names or attribute.dtypes[0] in enum_names -%}

    {%- if attribute.multiple is true -%}
            <xs:element name="{{attribute.name}}">
                {%- if attribute.docstring | length > 0 %}
                <xs:annotation>
                    <xs:documentation>
                        {{ attribute.docstring }}
                    </xs:documentation>
                </xs:annotation>
                {%- endif %}
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="{{attribute.dtypes[0]}}" type="{{attribute.dtypes[0]}}Type"
                        {%- if is_multiple(attribute) %}{{ is_multiple(attribute) }}{%- endif -%}
                        />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
    {%- else -%}
            {%- if attribute.docstring | length > 0 -%}
            <xs:element name="{{attribute.name}}" type="{{attribute.dtypes[0]}}Type">
                <xs:annotation>
                    <xs:documentation>
                        {{ attribute.docstring }}
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            {%- else -%}
            <xs:element name="{{attribute.name}}" type="{{attribute.dtypes[0]}}Type"/>
            {%- endif -%}
    {%- endif -%}

{%- else -%}
            {%- if attribute.docstring | length > 0 -%}
            <xs:element name="{{attribute.name}}" type="xs:{{attribute.dtypes[0]}}"
            {%- if is_multiple(attribute) %} {{ is_multiple(attribute) }}{% endif -%}
            {%- if get_default(attribute) %} {{ get_default(attribute) }}{% endif -%}
            >
                <xs:annotation>
                    <xs:documentation>
                        {{ attribute.docstring }}
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            {%- else -%}
            <xs:element name="{{attribute.name}}" type="xs:{{attribute.dtypes[0]}}"
            {%- if is_multiple(attribute) %} {{ is_multiple(attribute) }}{%- endif %}
            {%- if get_default(attribute) %} {{ get_default(attribute) }}{%- endif -%}
            />
            {%- endif -%}

            {%- endif -%}
{%- endmacro %}

<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <!-- Roots -->
    {%- for object in object_names %}
    <xs:element name="{{ object }}" type="{{ object }}Type"/>
    {%- endfor %}
    {% for object in objects%}
    <!-- {{ object.name }} Definition -->
    <xs:complexType name="{{ object.name }}Type">
        {%- if has_elements(object.attributes) %}
        <xs:sequence>
            {%- for attribute in object.attributes %}
            {%- if attribute.xml.is_attr is false %}
            {{ create_element(attribute) }}
            {%- endif %}
            {%- endfor %}
        </xs:sequence>
        {%- endif -%}
        {%- for attribute in object.attributes -%}
        {%- if attribute.xml.is_attr is true -%}
        {{ create_attribute(attribute) }}
        {%- endif -%}
        {%- endfor %}
    </xs:complexType>
    {% endfor %}

    {%- for enum in enums %}
    <!-- Enum {{ enum.name }} Definition -->
    <xs:simpleType name="{{ enum.name }}Type">
        <xs:restriction base="xs:string">
            {%- for key, value in enum.mappings | dictsort %}
            <xs:enumeration value="{{ value }}"/>
            {%- endfor %}
        </xs:restriction>
    </xs:simpleType>
    {%- endfor %}

</xs:schema>
